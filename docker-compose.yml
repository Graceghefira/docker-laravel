version: "3.8"
services:
    app:
        build:
            context: .
            dockerfile: Dockerfile
        container_name: laravel-app
        volumes:
            - ./src:/var/www
        networks:
            - laravel-network

    nginx:
        image: nginx:alpine
        container_name: nginx
        volumes:
            - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
            - ./src:/var/www
         ports:
            - "80:80"
            - "443:443"  # Menyediakan akses ke port 80
         depends_on:
            - app
         networks:
            - laravel-network
    # PHP Service
    php:
        build:
            context: .
            target: php
            args:
                - APP_ENV=${APP_ENV}
        environment:
            - APP_ENV=${APP_ENV}
            - CONTAINER_ROLE=app
        working_dir: /var/www
        volumes:
            - ./:/var/www
        ports:
            - 8000:8000
        depends_on:
            - database
            - redis

    # PHP Service
    websocket:
        build:
            context: .
            target: php
            args:
                - APP_ENV=${APP_ENV}
        environment:
            - APP_ENV=${APP_ENV}
            - CONTAINER_ROLE=websocket
        working_dir: /var/www
        volumes:
            - ./:/var/www
        ports:
            - 6001:6001
        depends_on:
            - database
            - redis

    # Database Server
    database:
        image: mysql:5.7
        ports:
            - 3307:3306
        environment:
            - MYSQL_DATABASE=${DB_DATABASE}
            - MYSQL_USER=${DB_USERNAME}
            - MYSQL_PASSWORD=${DB_PASSWORD}
            - MYSQL_ROOT_PASSWORD=${DB_PASSWORD}
        networks:
          default:
            aliases:
              - database
        volumes:
            - db-data:/var/lib/mysql

    # Redis Server
    redis:
        image: redis:alpine
        command: redis-server --appendonly yes --requirepass  "${REDIS_PASSWORD}"
        ports:
            - 6380:6379

    # Queue Server
    queue:
        build:
            context: .
            target: php
            args:
                - APP_ENV=${APP_ENV}
        environment:
            - APP_ENV=${APP_ENV}
            - CONTAINER_ROLE=queue
        working_dir: /var/www
        volumes:
            - ./:/var/www


    # Node Server
    node:
        build:
            context: .
            target: node
        volumes:
            - .:/usr/src
            - ./node_modules:/usr/src/node_modules
        tty: true

volumes:
    db-data: ~
