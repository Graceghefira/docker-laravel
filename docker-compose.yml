#version: "3"

services:
  app:
    build:
      context: .
      target: php
      dockerfile: Dockerfile
    image: php:8.1-fpm
    container_name: app
    user: "www-data"
    restart: unless-stopped
    tty: true
    volumes:
      - ./:/var/www
      - ./php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - laravel-network
   
  nginx:
    image: nginx:alpine
    container_name: nginx
    restart: unless-stopped
    tty: true
    volumes:
      - ./:/var/www
      - ./nginx/conf.d:/etc/nginx/conf.d/
    ports:
      - "80:80"
      - "443:443"  # Menyediakan akses ke port 443
    depends_on:
      - app
    networks:
      - laravel-network

  # PHP Service
  php:
    build:
      context: .
      target: php
      args:
        - APP_ENV=${APP_ENV}
    environment:
      - APP_ENV=${APP_ENV}
      - CONTAINER_ROLE=app
    working_dir: /var/www
    volumes:
      - ./:/var/www
    ports:
      - "8000:8000"
    depends_on:
      - database
      - redis
    networks:
      - laravel-network

  # WebSocket Service
  websocket:
    build:
      context: .
      target: php
      args:
        - APP_ENV=${APP_ENV}
    environment:
      - APP_ENV=${APP_ENV}
      - CONTAINER_ROLE=websocket
    working_dir: /var/www
    volumes:
      - ./:/var/www
    ports:
      - "6001:6001"
    depends_on:
      - database
      - redis
    networks:
      - laravel-network

  # Database Server
  database:
    image: mysql:5.7
    ports:
      - "3307:3306"
    environment:
      - MYSQL_DATABASE=${DB_DATABASE}
      - MYSQL_USER=${DB_USERNAME}
      - MYSQL_PASSWORD=${DB_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${DB_PASSWORD}
    networks:
      - laravel-network
    volumes:
      - db-data:/var/lib/mysql

  # Redis Server
  redis:
    image: redis:alpine
    command: redis-server --appendonly yes --requirepass "${REDIS_PASSWORD}"
    ports:
      - "6380:6379"
    networks:
      - laravel-network

  # Queue Server
  queue:
    build:
      context: .
      target: php
      args:
        - APP_ENV=${APP_ENV}
    environment:
      - APP_ENV=${APP_ENV}
      - CONTAINER_ROLE=queue
    working_dir: /var/www
    volumes:
      - ./:/var/www
    networks:
      - laravel-network

  # Node Server
  node:
    build:
      context: .
      target: node
    volumes:
      - .:/usr/src
      - ./node_modules:/usr/src/node_modules
    tty: true
    networks:
      - laravel-network

volumes:
  db-data: ~
  
networks:
  laravel-network:
    driver: bridge

